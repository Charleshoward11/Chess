#BlueJ class context
comment0.params=isWhite\ x\ y
comment0.target=Piece(boolean,\ int,\ int)
comment1.params=target
comment1.target=Piece\ setSquare(Square)
comment1.text=\r\n\ Sets\ this\ piece's\ position\ to\ a\ specified\ square,\r\n\ and\ sets\ that\ square's\ current\ piece\ to\ this\ one.\r\n\ \r\n\ Also\ updates\ the\ deprecated\ x\ and\ y\ values.\r\n\ \r\n\ No\ longer\ causes\ an\ infinite\ loop\!\r\n
comment10.params=a
comment10.target=Piece\ setActor(PieceActor)
comment10.text=\r\n\ If\ the\ piece\ already\ has\ an\ actor,\ this\ method\ does\ nothing.\r\n\ \r\n\ It\ should\ probably\ throw\ an\ exception,\ though.\r\n
comment11.params=
comment11.target=PieceActor\ getActor()
comment12.params=
comment12.target=Piece\ clone()
comment13.params=b
comment13.target=java.util.ArrayList\ getMoves(Board)
comment13.text=\r\n\ This\ method\ "cooperates"\ with\ a\ method\ in\ the\ board\ class.\r\n\ This\ method\ returns\ the\ way\ the\ piece\ moves,\ while\ the\ board's\ method\ analyzes\ \r\n\ the\ output\ and\ figures\ out\ how\ to\ apply\ it\ to\ the\ current\ game\ scenario.\r\n\ \r\n\ I\ might\ make\ this\ return\ a\ multidimensional\ arraylist,\ \r\n\ with\ each\ dimension\ representing\ a\ line\ of\ moves\ for\ a\ "runner"-type\ piece.\r\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\r\n\ I\ found\ the\ unicode\ characters\ for\ chess\ pieces,\ but\ they\ were\ all\ 1+1/2\ spaces\ wide,\r\n\ so\ I\ also\ had\ to\ find\ the\ unicode\ character\ for\ 1/4\ space.\ It\ was\ a\ little\ annoying.\r\n
comment2.params=
comment2.target=Square\ getSquare()
comment3.params=
comment3.target=Board\ getBoard()
comment4.params=x
comment4.target=Piece\ setX(int)
comment5.params=
comment5.target=int\ getX()
comment6.params=y
comment6.target=Piece\ setY(int)
comment7.params=
comment7.target=int\ getY()
comment8.params=m
comment8.target=Piece\ setMoved(boolean)
comment9.params=
comment9.target=boolean\ hasMoved()
numComments=15
