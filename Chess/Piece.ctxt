#BlueJ class context
comment0.params=color\ x\ y
comment0.target=Piece(java.lang.String,\ int,\ int)
comment1.params=
comment1.target=java.lang.String\ getColor()
comment10.params=
comment10.target=boolean\ isKing()
comment11.params=
comment11.target=boolean\ isRook()
comment12.params=
comment12.target=boolean\ isPawn()
comment13.params=
comment13.target=boolean\ isQueen()
comment14.params=
comment14.target=boolean\ isBishop()
comment15.params=
comment15.target=boolean\ isKnight()
comment2.params=x
comment2.target=Piece\ setX(int)
comment3.params=
comment3.target=int\ getX()
comment4.params=y
comment4.target=Piece\ setY(int)
comment5.params=
comment5.target=int\ getY()
comment6.params=m
comment6.target=boolean\ performMove(Move)
comment6.text=\r\n\ Should\ this\ be\ here?\r\n
comment7.params=
comment7.target=boolean\ hasMoved()
comment8.params=
comment8.target=java.util.ArrayList\ getMoves()
comment8.text=\r\n\ This\ method\ "cooperates"\ with\ a\ method\ in\ the\ board\ class.\r\n\ This\ method\ returns\ the\ way\ the\ piece\ moves,\ while\ the\ board's\ method\ analyzes\ \r\n\ the\ output\ and\ figures\ out\ how\ to\ apply\ it\ to\ the\ current\ game\ scenario.\r\n\ \r\n\ I\ might\ make\ this\ return\ a\ multidimensional\ arraylist,\ \r\n\ with\ each\ dimension\ representing\ a\ line\ of\ moves\ for\ a\ "runner"-type\ piece.\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\ I\ found\ the\ unicode\ characters\ for\ chess\ pieces,\ but\ they\ were\ all\ 1+1/2\ spaces\ wide,\r\n\ so\ I\ also\ had\ to\ find\ the\ unicode\ character\ for\ 1/4\ space.\r\n
numComments=16
