#BlueJ class context
comment0.params=
comment0.target=Board()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Board\r\n
comment1.params=
comment1.target=void\ printBoard()
comment1.text=\r\n\ Prints\ out\ a\ text\ representation\ of\ the\ board\ to\ the\ console.\r\n\ Used\ for\ testing.\r\n
comment2.params=p
comment2.target=ValidMoveList\ getValidMoves(Piece)
comment2.text=\r\n\ Requests\ a\ piece's\ moveset,\ then\ does\ a\ second\ pass\ on\ it\ to\ apply\ it\ to\ the\ board's\ current\ state.\r\n
comment3.params=s
comment3.target=ValidMoveList\ getValidMoves(Square)
comment4.params=x\ y
comment4.target=ValidMoveList\ getValidMoves(int,\ int)
comment5.params=x\ y
comment5.target=Square\ getSquare(int,\ int)
comment6.params=p
comment6.target=boolean\ placePiece(Piece)
comment6.text=\r\n\ Places\ a\ piece\ on\ the\ board\ based\ on\ the\ piece's\ internal\ x\ and\ y\ values.\r\n\ \r\n\ Returns\ true\ if\ successful,\ false\ if\ not\ (e.g.\ if\ the\ requested\ square\ is\ occupied).\r\n\ Maybe\ this\ should\ throw\ an\ exception\ or\ something.\r\n
comment7.params=
comment7.target=Board\ resetBoard()
comment7.text=\r\n\ Sets\ up\ the\ board\ in\ the\ default\ starting\ state\ for\ chess.\r\n
comment8.params=color
comment8.target=boolean\ checkCheck(java.lang.String)
comment8.text=\r\n\ Takes\ in\ a\ color,\ and\ checks\ every\ possible\ move\ in\ that\ player's\ turn.\r\n\ \r\n\ @returns\ true\ if\ that\ player\ is\ in\ check.\r\n
numComments=9
